user.user_permissions.all()
permission = Permission.objects.get(jakis=jakis)
user.user_permissions.add(permisiion)
user.save()
user.is_superuser = True/False


select * from django_content_type;
 select * from auth_permission;

GRUPY:
calym grupom nadajemy uprawnienia
Group.objects.all()
 Group.objects.all()
<QuerySet [<Group: VIP>]>
>>> group.save()
>>> group
<Group: VIP>
>>> group.permissions.add()
>>> group
<Group: VIP>
>>> group.permissions



pip install django-extensions
python3 manage.py shell_plus

haslo w shellu:
user.set_password('haslo')

manage.py - samo podpowiada komendy
manage.py clearsessions - czysci sesja

python manage.py createsuperuser

python manage.py changepassword darthvader

dane z django_session odkodzic
import base64
base64.b64decode(dana)

delete from django_session;


'edu.my_context_processor.my_cp'  - dodanie zmiennej do wszystkich views

{% for item in navigation %}
        <li><a href="{{ item.href }}">
            {{ item.caption }}</a></li>
      {% empty %} - jak lista pusta!!!! 
          lista pusta
      {% endfor %}

filtry
<h2> {{ v|add:5 }}</h2>


---inna metoda db connect
sudo apt-get install python-mysqldb
sudo apt-get install --upgrade python-mysqldb
pip install mysql-connector-python --allow-external mysql-connector-python

Faker - generowal imiiona nazwiska


 on_delete=models.CASCADE

ps aux | grep manage.py
kill <numerek>
kill -9 <numerek>
xkill 
alt+f7 - przesuwanie
ctrl alt f1 - konsola - f7 grafika


collect static - na serwerze

200 - ok
302 - przekierowanie


q = forms.CharField(label='search', 
                    widget=forms.TextInput(attrs={'placeholder': 'Search'}))


